- type: entity
  parent: [BaseItem, BaseFoldable]
  categories: [ HideSpawnMenu ]
  abstract: true
  id: STCardBase
  name: карта
  components:
  - type: Sprite
    sprite: _Stories/Objects/Fun/card.rsi
    layers:
    - state: Back
      map: [ "unfoldedLayer" ]
  - type: Tag
    tags:
    - STCard
  - type: Foldable
    canFoldInsideContainer: true
  - type: Card
  - type: Appearance

# Clubs
- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STClubs1
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Clubs1 }
          False: { state: Back }
  - type: Card
    name: "трефы 1"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STClubs2
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Clubs2 }
          False: { state: Back }
  - type: Card
    name: "трефы 2"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STClubs3
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Clubs3 }
          False: { state: Back }
  - type: Card
    name: "трефы 3"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STClubs4
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Clubs4 }
          False: { state: Back }
  - type: Card
    name: "трефы 4"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STClubs5
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Clubs5 }
          False: { state: Back }
  - type: Card
    name: "трефы 5"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STClubs6
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Clubs6 }
          False: { state: Back }
  - type: Card
    name: "трефы 6"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STClubs7
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Clubs7 }
          False: { state: Back }
  - type: Card
    name: "трефы 7"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STClubs8
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Clubs8 }
          False: { state: Back }
  - type: Card
    name: "трефы 8"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STClubs9
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Clubs9 }
          False: { state: Back }
  - type: Card
    name: "трефы 9"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STClubs10
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Clubs10 }
          False: { state: Back }
  - type: Card
    name: "трефы 10"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STClubs11
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Clubs11 }
          False: { state: Back }
  - type: Card
    name: "трефы король"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STClubs12
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Clubs12 }
          False: { state: Back }
  - type: Card
    name: "трефы дама"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STClubs13
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Clubs13 }
          False: { state: Back }
  - type: Card
    name: "трефы валет"

# Diamonds
- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STDiamonds1
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Diamonds1 }
          False: { state: Back }
  - type: Card
    name: "бубны туз"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STDiamonds2
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Diamonds2 }
          False: { state: Back }
  - type: Card
    name: "бубны 2"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STDiamonds3
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Diamonds3 }
          False: { state: Back }
  - type: Card
    name: "бубны 3"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STDiamonds4
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Diamonds4 }
          False: { state: Back }
  - type: Card
    name: "бубны 4"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STDiamonds5
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Diamonds5 }
          False: { state: Back }
  - type: Card
    name: "бубны 5"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STDiamonds6
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Diamonds6 }
          False: { state: Back }
  - type: Card
    name: "бубны 6"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STDiamonds7
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Diamonds7 }
          False: { state: Back }
  - type: Card
    name: "бубны 7"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STDiamonds8
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Diamonds8 }
          False: { state: Back }
  - type: Card
    name: "бубны 8"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STDiamonds9
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Diamonds9 }
          False: { state: Back }
  - type: Card
    name: "бубны 9"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STDiamonds10
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Diamonds10 }
          False: { state: Back }
  - type: Card
    name: "бубны 10"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STDiamonds11
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Diamonds11 }
          False: { state: Back }
  - type: Card
    name: "бубны король"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STDiamonds12
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Diamonds12 }
          False: { state: Back }
  - type: Card
    name: "бубны дама"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STDiamonds13
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Diamonds13 }
          False: { state: Back }
  - type: Card
    name: "бубны валет"

# Hearts
- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STHearts1
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Hearts1 }
          False: { state: Back }
  - type: Card
    name: "червы туз"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STHearts2
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Hearts2 }
          False: { state: Back }
  - type: Card
    name: "червы 2"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STHearts3
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Hearts3 }
          False: { state: Back }
  - type: Card
    name: "червы 3"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STHearts4
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Hearts4 }
          False: { state: Back }
  - type: Card
    name: "червы 4"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STHearts5
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Hearts5 }
          False: { state: Back }
  - type: Card
    name: "червы 5"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STHearts6
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Hearts6 }
          False: { state: Back }
  - type: Card
    name: "червы 6"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STHearts7
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Hearts7 }
          False: { state: Back }
  - type: Card
    name: "червы 7"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STHearts8
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Hearts8 }
          False: { state: Back }
  - type: Card
    name: "червы 8"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STHearts9
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Hearts9 }
          False: { state: Back }
  - type: Card
    name: "червы 9"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STHearts10
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Hearts10 }
          False: { state: Back }
  - type: Card
    name: "червы 10"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STHearts11
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Hearts11 }
          False: { state: Back }
  - type: Card
    name: "червы король"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STHearts12
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Hearts12 }
          False: { state: Back }
  - type: Card
    name: "червы дама"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STHearts13
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Hearts13 }
          False: { state: Back }
  - type: Card
    name: "червы валет"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STHearts14
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Hearts14 }
          False: { state: Back }
  - type: Card
    name: "червы джокер"

# Spades
- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STSpades1
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Spades1 }
          False: { state: Back }
  - type: Card
    name: "пики туз"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STSpades2
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Spades2 }
          False: { state: Back }
  - type: Card
    name: "пики 2"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STSpades3
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Spades3 }
          False: { state: Back }
  - type: Card
    name: "пики 3"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STSpades4
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Spades4 }
          False: { state: Back }
  - type: Card
    name: "пики 4"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STSpades5
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Spades5 }
          False: { state: Back }
  - type: Card
    name: "пики 5"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STSpades6
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Spades6 }
          False: { state: Back }
  - type: Card
    name: "пики 6"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STSpades7
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Spades7 }
          False: { state: Back }
  - type: Card
    name: "пики 7"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STSpades8
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Spades8 }
          False: { state: Back }
  - type: Card
    name: "пики 8"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STSpades9
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Spades9 }
          False: { state: Back }
  - type: Card
    name: "пики 9"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STSpades10
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Spades10 }
          False: { state: Back }
  - type: Card
    name: "пики 10"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STSpades11
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Spades11 }
          False: { state: Back }
  - type: Card
    name: "пики король"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STSpades12
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Spades12 }
          False: { state: Back }
  - type: Card
    name: "пики дама"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STSpades13
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Spades13 }
          False: { state: Back }
  - type: Card
    name: "пики валет"

- type: entity
  parent: STCardBase
  categories: [ HideSpawnMenu ]
  id: STSpades14
  components:
  - type: GenericVisualizer
    visuals:
      enum.FoldedVisuals.State:
        foldedLayer:
          True: { state: Spades14 }
          False: { state: Back }
  - type: Card
    name: "пики джокер"

# Other
- type: entity
  parent: STCardBase
  id: STCardRandom
  name: случайная карта
  components:
  - type: Sprite
    layers:
    - state: Back
      map: [ "unfoldedLayer" ]
    - state: Clubs1
      map: ["foldedLayer"]
      visible: false
  - type: RandomSpawner
    prototypes:
    - STClubs1
    - STClubs2
    - STClubs3
    - STClubs4
    - STClubs5
    - STClubs6
    - STClubs7
    - STClubs8
    - STClubs9
    - STClubs10
    - STClubs11
    - STClubs12
    - STClubs13
    - STDiamonds1
    - STDiamonds2
    - STDiamonds3
    - STDiamonds4
    - STDiamonds5
    - STDiamonds6
    - STDiamonds7
    - STDiamonds8
    - STDiamonds9
    - STDiamonds10
    - STDiamonds11
    - STDiamonds12
    - STDiamonds13
    - STHearts1
    - STHearts2
    - STHearts3
    - STHearts4
    - STHearts5
    - STHearts6
    - STHearts7
    - STHearts8
    - STHearts9
    - STHearts10
    - STHearts11
    - STHearts12
    - STHearts13
    - STHearts14
    - STSpades1
    - STSpades2
    - STSpades3
    - STSpades4
    - STSpades5
    - STSpades6
    - STSpades7
    - STSpades8
    - STSpades9
    - STSpades10
    - STSpades11
    - STSpades12
    - STSpades13
    - STSpades14
    chance: 1
  - type: Appearance

- type: entity
  parent: BaseItem
  categories: [ HideSpawnMenu ]
  id: STCardDeck
  name: колода карт
  components:
  - type: Sprite
    sprite: _Stories/Objects/Fun/card.rsi
    state: Back
  - type: Item
    size: Small
  - type: CardStack
  - type: ContainerContainer
    containers:
      card-stack-container: !type:Container
  - type: CardDeck
  - type: Appearance

- type: entity
  parent: STCardDeck
  categories: [ HideSpawnMenu ]
  id: STCardDeckFull
  name: колода из 54 карт
  components:
  - type: Sprite
    sprite: _Stories/Objects/Fun/card.rsi
    state: Back
  - type: CardStack
    content:
    - STClubs1
    - STClubs2
    - STClubs3
    - STClubs4
    - STClubs5
    - STClubs6
    - STClubs7
    - STClubs8
    - STClubs9
    - STClubs10
    - STClubs11
    - STClubs12
    - STClubs13
    - STDiamonds1
    - STDiamonds2
    - STDiamonds3
    - STDiamonds4
    - STDiamonds5
    - STDiamonds6
    - STDiamonds7
    - STDiamonds8
    - STDiamonds9
    - STDiamonds10
    - STDiamonds11
    - STDiamonds12
    - STDiamonds13
    - STHearts1
    - STHearts2
    - STHearts3
    - STHearts4
    - STHearts5
    - STHearts6
    - STHearts7
    - STHearts8
    - STHearts9
    - STHearts10
    - STHearts11
    - STHearts12
    - STHearts13
    - STHearts14
    - STSpades1
    - STSpades2
    - STSpades3
    - STSpades4
    - STSpades5
    - STSpades6
    - STSpades7
    - STSpades8
    - STSpades9
    - STSpades10
    - STSpades11
    - STSpades12
    - STSpades13
    - STSpades14
  - type: Item
    size: Small
  - type: CardDeck
  - type: Appearance

- type: entity
  parent: STCardDeck
  categories: [ HideSpawnMenu ]
  id: STCardDeckFullUSSP
  name: колода из 36 карт
  components:
  - type: Sprite
    sprite: _Stories/Objects/Fun/card.rsi
    state: Back
  - type: CardStack
    content:
    - STClubs1
    - STClubs6
    - STClubs7
    - STClubs8
    - STClubs9
    - STClubs10
    - STClubs11
    - STClubs12
    - STClubs13
    - STDiamonds1
    - STDiamonds6
    - STDiamonds7
    - STDiamonds8
    - STDiamonds9
    - STDiamonds10
    - STDiamonds11
    - STDiamonds12
    - STDiamonds13
    - STHearts1
    - STHearts6
    - STHearts7
    - STHearts8
    - STHearts9
    - STHearts10
    - STHearts11
    - STHearts12
    - STHearts13
    - STSpades1
    - STSpades6
    - STSpades7
    - STSpades8
    - STSpades9
    - STSpades10
    - STSpades11
    - STSpades12
    - STSpades13
  - type: Item
    size: Small
  - type: CardDeck
  - type: Appearance

- type: entity
  parent: [ BaseItemCabinet, BaseItem ]
  categories: [ HideSpawnMenu ]
  id: STCardDeckBox
  name: упаковка карт
  components:
  - type: Openable
    closeable: true
    sound:
      path: /Audio/_Stories/Items/CardDeckBox/open.ogg
    closeSound:
      path: /Audio/_Stories/Items/CardDeckBox/close.ogg
  - type: CardDeckBox
  - type: Sprite
    sprite: _Stories/Objects/Fun/card.rsi
    layers:
    - state: closed
      map: ["enum.OpenableVisuals.Layer"]
    - state: box-1
      map: ["enum.ItemCabinetVisuals.Layer"]
      visible: true
  - type: ItemSlots
    slots:
      ItemCabinet:
        ejectOnInteract: true
        whitelist:
          components:
          - CardDeck
        insertSound:
          path: /Audio/_Stories/Items/CardDeckBox/addeck.ogg
        ejectSound:
          path: /Audio/_Stories/Items/CardDeckBox/removedeck.ogg

- type: entity
  parent: STCardDeckBox
  categories: [ HideSpawnMenu ]
  id: STCardDeckBoxOpen
  components:
  - type: Openable
    opened: true

- type: entity
  parent: STCardDeckBox
  id: STCardDeckBoxFilled
  suffix: Заполнена
  components:
  - type: ContainerFill
    containers:
      ItemCabinet:
      - STCardDeckFull

- type: entity
  parent: [STCardDeckBoxFilled, STCardDeckBoxOpen]
  categories: [ HideSpawnMenu ]
  id: STCardDeckBoxFilledOpen

- type: entity
  parent: [ BaseItemCabinet, BaseItem, STCardDeckBox ]
  categories: [ HideSpawnMenu ]
  id: STCardDeckBoxUSSP
  name: упаковка карт СССП
  description: Колода, преимущественно использующаяся в СССП.
  components:
  - type: GenericVisualizer
    visuals:
      enum.ItemCabinetVisuals.ContainsItem:
        enum.ItemCabinetVisuals.Layer:
          True: { visible: true }
          False: { visible: false }
      enum.OpenableVisuals.Opened:
        enum.OpenableVisuals.Layer:
          True: { state: open_ussp }
          False: { state: closed_ussp }
  - type: Sprite
    sprite: _Stories/Objects/Fun/card.rsi
    layers:
    - state: closed_ussp
      map: ["enum.OpenableVisuals.Layer"]
    - state: box-1
      map: ["enum.ItemCabinetVisuals.Layer"]
      visible: true
  - type: ItemSlots
    slots:
      ItemCabinet:
        ejectOnInteract: true
        whitelist:
          components:
          - CardDeck
        insertSound:
          path: /Audio/_Stories/Items/CardDeckBox/addeck.ogg
        ejectSound:
          path: /Audio/_Stories/Items/CardDeckBox/removedeck.ogg

- type: entity
  parent: STCardDeckBoxUSSP
  categories: [ HideSpawnMenu ]
  id: STCardDeckBoxOpenUSSP
  components:
  - type: Openable
    opened: true

- type: entity
  parent: STCardDeckBoxUSSP
  id: STCardDeckBoxFilledUSSP
  name: упаковка карт СССП
  suffix: Заполнена
  components:
  - type: ContainerFill
    containers:
      ItemCabinet:
      - STCardDeckFullUSSP

- type: entity
  parent: [STCardDeckBoxFilledUSSP, STCardDeckBoxOpenUSSP]
  categories: [ HideSpawnMenu ]
  id: STCardDeckBoxFilledOpenUSSP
  name: упаковка карт СССП
  components:
  - type: Openable
    opened: true
  - type: ContainerFill
    containers:
      ItemCabinet:
      - STCardDeckFullUSSP

- type: entity
  parent: BaseItem
  categories: [ HideSpawnMenu ]
  id: STCardFan
  name: карточный веер
  components:
  - type: Sprite
    sprite: _Stories/Objects/Fun/card.rsi
    state: Back
    layers:
    - state: Clubs1
  - type: CardFan
  - type: ContainerContainer
    containers:
      card-stack-container: !type:Container
  - type: CardStack
  - type: Tag
    tags:
    - STCard
  - type: UserInterface
    interfaces:
      enum.CardFanUiKey.Key:
        type: FanMenuBoundUserInterface
  - type: ActivatableUI
    inHandsOnly: true
    key: enum.CardFanUiKey.Key
  - type: Appearance
